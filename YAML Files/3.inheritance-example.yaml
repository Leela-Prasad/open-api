openapi: 3.0.2
info:
  version: '1.0'
  title: 'OpenAPI Course'
  description: Specification for Open API Course
  termsOfService: http://example.com/terms/
  contact:
    name: Leela Prasad
    email: leelaprasad.jagu@gmail.com
    url: https://springframework.guru
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers: 
  - url: https://dev.example.com
    description: Devlopment Server
  - url: https://qa.example.com
    description: QA Server
paths: 
  '/v1/customers':
    get:
      responses:
        200:
          description: List Of Customers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPagedList'
        
  '/v1/beers':
    get:
      responses:
        200:
          description: List of Beer Objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeerPagedList'
                  
        404:
          description: Resource Not found
          
components:
  schemas:
    Address:
      type: object
      properties:
        line1:
          type: string
          example: 123 main
        city:
          type: string
          example: bza
        stateCode:
          type: string
          description: 2 Letter State Code
          enum:
            - AP
            - TN
            - KA
        zipCode:
          type: string
          example: 52001
          
    Customer:
      type: object
      description: Customer Object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
          minLength: 2
          maxLength: 100
          example: Leela
        lastName:
          type: string
          minLength: 2
          maxLength: 100
          example: Jagu
        address:
          $ref: '#/components/schemas/Address'
          
    CustomerList:
      type: array
      minItems: 1
      maxItems: 100
      items:
        $ref: '#/components/schemas/Customer'
    
    CustomerPagedList:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/CustomerList'
      allOf:
        - $ref: '#/components/schemas/PagedResponse'
          
    
    Brewery:
      type: object
      properties:
        name:
          type: string
        location: 
          type: string
          
    Beer:
      type: object
      description: Beer Object
      properties:
        beerName:
          type: string
        style:
          type: string
          enum: 
            - ALE
            - PALE_ALE
            - IPA
            - WHEAT
            - LAGER
        upc:
          type: string
        price:
          type: number
          format: float
        quantityOnHand:
          type: integer
          format: int32
        brewery:
          $ref: '#/components/schemas/Brewery'
          
    BeerList:
      type: array
      items:
        $ref: '#/components/schemas/Beer'
    
    BeerPagedList:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/BeerList'
      allOf:
        - $ref: '#/components/schemas/PagedResponse'
        
    PagedResponse:
      type: object
      properties:
        pageable:
          $ref: '#/components/schemas/PagedResponse_pageable'
        totalPages:
          type: integer
          format: int32
        last:
          type: boolean
        totalElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/PagedResponse_pageable_sort'
        first:
          type: boolean
    
    PagedResponse_pageable:
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/PagedResponse_pageable_sort'
        offset:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
          
    PagedResponse_pageable_sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
            